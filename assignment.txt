Section 1-GIT and GITHUB

->difference between git and GitHub: Git is a version control software and GitHub is a version control repo hosting service.

->GitHub functionality includes : fork(duplicating some repo), pull request(we can ask someone to add changes made by us into his/her branch), merge (we can add changes to our repo that were done in some other branch).

-> Git commands:
1.git init: to initialize repo
2.git add (file name): to particular file to staging area 
3.git commit -m "message": to commit changes to our local repo
4.git push origin branch-name: to push changes to particular branch.
5.git pull origin branch-name: to pull changes from particular branch.
6.git fetch origin branch-name:we get all the history of particular branch.
7.git merge origin/branch-name: to combine changes of branches using the information that we acquire using fetch.

pull is basically combination of fetch and merge.

8.git status: shows untracked,staged or modified files.
9. git config -global user.name "name": to set author name/email
10. git diff: get difference between working area/tree and staging area. 
11. git reset: unstages the files.
12. git reset hard: we use this to permanently delete local changes.
13. git rm filename: to a file
14. git log: to get history y.
15. git branch: get list of all branches.
16. git branch branchname :to create new branch.
17. git checkout branchname: to switch into branches. 
18. git stash: it deletes the local changes and gets back to head commit but store the changes temporarily.

git merge vs rebase vs squash commit

git merge: pull latest changes to main from particular branch.
git rebase: moves feature branch to the head of main branch.(we get linear history of what changes were made in secondary branches).
git squash: combine all the commits of secondary branch and the committing to the main branch. 





	
